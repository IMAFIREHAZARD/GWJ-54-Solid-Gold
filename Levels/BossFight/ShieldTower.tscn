[gd_scene load_steps=10 format=2]

[ext_resource path="res://Art/VFX/Barrier_3.png" type="Texture" id=1]
[ext_resource path="res://Art/VFX/Barrier_5.png" type="Texture" id=2]
[ext_resource path="res://Art/VFX/Barrier_4.png" type="Texture" id=3]
[ext_resource path="res://Art/VFX/Barrier_1.png" type="Texture" id=4]
[ext_resource path="res://Art/VFX/Barrier_2.png" type="Texture" id=5]
[ext_resource path="res://Levels/BossFight/ShieldTower.gd" type="Script" id=6]
[ext_resource path="res://Entities/Objects/Reflectors/RoundReflector.tscn" type="PackedScene" id=7]
[ext_resource path="res://Entities/NPCs/Critter/Critter.tscn" type="PackedScene" id=8]

[sub_resource type="SpriteFrames" id=1]
animations = [ {
"frames": [ ExtResource( 4 ), ExtResource( 5 ), ExtResource( 1 ), ExtResource( 3 ), ExtResource( 2 ) ],
"loop": true,
"name": "default",
"speed": 12.0
} ]

[node name="SheildTower" type="StaticBody2D"]
collision_layer = 4
collision_mask = 0
script = ExtResource( 6 )
bug_scene = ExtResource( 8 )

[node name="Polygon2D" type="Polygon2D" parent="."]
scale = Vector2( 2, 2 )
polygon = PoolVector2Array( -32, 0, 0, 16, 32, 0, 24, -32, 24, -56, 32, -64, 32, -72, 24, -96, 32, -112, 32, -128, 56, -144, 56, -160, 40, -176, 48, -160, 32, -144, 24, -160, 8, -168, 16, -144, 8, -120, -8, -128, -8, -160, -8, -152, -16, -120, -32, -128, -24, -104, -48, -128, -40, -96, -40, -80, -32, -72, -24, -56, -24, -32, -32, -16 )

[node name="Polygon2D" type="Polygon2D" parent="Polygon2D"]
color = Color( 0.670588, 0.0784314, 0.0784314, 1 )
polygon = PoolVector2Array( -8, -152, -32, -120, 0, -88, 24, -120 )

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="."]
polygon = PoolVector2Array( 0, 16, 32, 0, 0, -16, -32, 0 )

[node name="Shield" type="AnimatedSprite" parent="."]
position = Vector2( 0, -160.64 )
scale = Vector2( 1.12, 1.10289 )
frames = SubResource( 1 )
frame = 1
playing = true

[node name="Reflector" parent="." instance=ExtResource( 7 )]

[node name="Timer" type="Timer" parent="."]
wait_time = 2.0
autostart = true

[connection signal="reflect" from="Reflector" to="." method="_on_Reflector_reflect"]
[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
