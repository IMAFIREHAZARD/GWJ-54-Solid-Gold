[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="VisualShaderNodeTexture" id=1]

[sub_resource type="VisualShaderNodeColorUniform" id=2]
uniform_name = "ColorUniform"

[sub_resource type="VisualShader" id=3]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;

uniform vec4 ColorUniform : hint_color;
uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:4
	vec3 n_out4p0 = ColorUniform.rgb;
	float n_out4p1 = ColorUniform.a;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Output:0
	ALBEDO = n_out4p0;
	ALPHA = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -361.036, -41.483 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -180, 300 )
nodes/fragment/4/node = SubResource( 2 )
nodes/fragment/4/position = Vector2( -760, 20 )
nodes/fragment/connections = PoolIntArray( 2, 1, 0, 1, 4, 0, 0, 0 )

[resource]
shader = SubResource( 3 )
shader_param/ColorUniform = Color( 1, 1, 1, 1 )
